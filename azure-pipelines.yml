trigger:
  branches:
    include:
      - main

variables:
  dockerRegistryServiceConnection: 'acr-docker-connection'
  acrLoginServer: 'shivacr.azurecr.io'
  imageRepository: 'spring-petclinic'
  dockerImageName: '$(acrLoginServer)/$(imageRepository):$(Build.BuildId)'
  kubernetesServiceConnection: 'aks-k8s-connection'
  aksNamespace: 'default'
  sshServiceConnection: 'frontend'
  MAVEN_OPTS: '-Xmx512m'
  JAVA_HOME: '/usr/lib/jvm/java-17-openjdk-amd64'

pool:
  name: MyAzureVM-Pool

stages:
  - stage: Build
    displayName: 'Build Spring Boot App'
    jobs:
      - job: Build
        steps:
          - task: UseMavenVersion@0
            inputs:
              version: '3.8.8'

          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              javaHomeOption: 'Path'
              jdkDirectory: '$(JAVA_HOME)'
              options: '-DskipTests'
            displayName: 'Maven Build (no tests)'

          - task: Bash@3
            inputs:
              targetType: 'inline'
              script: |
                echo "üîç Running SonarCloud Scan"
                mvn verify sonar:sonar \
                  -Dsonar.projectKey=spring-petclinic \
                  -Dsonar.organization=shivakarthikreddyk \
                  -Dsonar.host.url=https://sonarcloud.io \
                  -Dsonar.login=$(sonar_token) \
                  -Djava.opts="$(MAVEN_OPTS)"
            displayName: 'Run SonarCloud Analysis'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/target'
              ArtifactName: 'spring-petclinic-jar'
              publishLocation: 'Container'

  - stage: Dockerize
    displayName: 'Docker Build and Push'
    dependsOn: Build
    jobs:
      - job: DockerBuildPush
        steps:
          - task: Docker@2
            inputs:
              containerRegistry: '$(dockerRegistryServiceConnection)'
              repository: '$(imageRepository)'
              command: 'buildAndPush'
              Dockerfile: 'Dockerfile'
              buildContext: '$(Build.SourcesDirectory)'
              tags: '$(Build.BuildId)'
            displayName: 'Docker Build and Push'

  - stage: Deploy
    displayName: 'Deploy to AKS'
    dependsOn: Dockerize
    jobs:
      - job: DeployAKS
        steps:
          - task: KubernetesManifest@1
            inputs:
              action: 'deploy'
              kubernetesServiceConnection: '$(kubernetesServiceConnection)'
              namespace: '$(aksNamespace)'
              manifests: |
                manifests/deployment.yaml
                manifests/service.yaml
              containers: |
                $(dockerImageName)
            displayName: 'Deploy to AKS'

  - stage: Verify
    displayName: 'Expose & Verify App'
    dependsOn: Deploy
    jobs:
      - job: VerifyAccess
        steps:
          - script: |
              echo "üåê External IP:"
              kubectl get svc spring-petclinic-service -n $(aksNamespace) -o jsonpath='{.status.loadBalancer.ingress[0].ip}'
            displayName: 'Print LoadBalancer IP'
