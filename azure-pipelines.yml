trigger:
  - main

pool:
  name: MyAzureVM-Pool  # Make sure this matches your actual pool name

variables:
  JAVA_HOME: /usr/lib/jvm/java-17-openjdk-amd64
  MAVEN_HOME: /opt/apache-maven
  PATH: $(JAVA_HOME)/bin:$(MAVEN_HOME)/bin:$(PATH)

stages:
  - stage: BuildSpringBootApp
    displayName: Build Spring Boot App
    jobs:
      - job: BuildWithMavenAndSonarCloud
        displayName: Build with Maven & SonarCloud
        steps:
          - script: |
              echo "Java Version:"
              java -version
              echo "Maven Version:"
              mvn -version
            displayName: Verify Java and Maven Versions

          - script: |
              export MAVEN_OPTS="-Xmx512m"
              mvn clean verify sonar:sonar \
                -Dsonar.projectKey=spring-petclinic \
                -Dsonar.organization=shivakarthikreddyk \
                -Dsonar.host.url=https://sonarcloud.io \
                -Dsonar.login=$(sonar_token)
            displayName: Build with Maven and Run SonarCloud Analysis

  - stage: DockerBuildAndPush
    displayName: Docker Build and Push
    dependsOn: BuildSpringBootApp
    condition: succeeded()
    jobs:
      - job: BuildDockerImage
        displayName: Build Docker Image and Push
        steps:
          - script: |
              docker build -t spring-petclinic .
              docker tag spring-petclinic shivacr.azurecr.io/spring-petclinic:latest
              echo $(acr_password) | docker login shivacr.azurecr.io -u $(acr_username) --password-stdin
              docker push shivacr.azurecr.io/spring-petclinic:latest
            displayName: Docker Build & Push

  - stage: DeployToAKS
    displayName: Deploy to AKS
    dependsOn: DockerBuildAndPush
    condition: succeeded()
    jobs:
      - job: Deploy
        steps:
          - script: |
              kubectl apply -f k8s/deployment.yaml
              kubectl apply -f k8s/service.yaml
            displayName: Deploy to AKS

  - stage: ExposeAndVerifyApp
    displayName: Expose & Verify App
    dependsOn: DeployToAKS
    condition: succeeded()
    jobs:
      - job: Verify
        steps:
          - script: |
              kubectl get svc
              echo "Check the external IP and test the app"
            displayName: Verify Service Exposure
