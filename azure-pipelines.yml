trigger:
  branches:
    include:
      - main

pool:
  name: MyAzureVM-Pool  # Use your self-hosted agent pool

variables:
  jarName: 'spring-petclinic-3.4.0-SNAPSHOT.jar'  # Update if the jar name changes
  sshServiceConnection: 'frontend'
  remoteUser: 'azureuser'
  remoteHost: '52.168.120.170'
  remotePath: '/home/azureuser/app'

stages:
  - stage: Build
    displayName: 'Build Spring Boot JAR'
    jobs:
      - job: BuildAndPackage
        steps:
          - task: Maven@4
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
              javaHomeOption: 'Path'
              jdkDirectory: 'C:\\Program Files\\Java\\jdk-17'
            displayName: 'Maven Clean Package'

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: 'target'
              ArtifactName: 'spring-petclinic'
              publishLocation: 'Container'

  - stage: Deploy
    displayName: 'Deploy to Azure VM'
    dependsOn: Build
    jobs:
      - job: DeployToVM
        steps:
          - download: current
            artifact: spring-petclinic

          - task: CopyFilesOverSSH@0
            inputs:
              sshEndpoint: '$(sshServiceConnection)'
              sourceFolder: '$(Pipeline.Workspace)/spring-petclinic'
              contents: '**/$(jarName)'
              targetFolder: '$(remotePath)'
            displayName: 'Copy JAR to VM'

          - task: SSH@0
            inputs:
              sshEndpoint: '$(sshServiceConnection)'
              runOptions: 'inline'
              inline: |
                echo "âœ… Starting Spring Boot app..."
                pkill -f "$(jarName)" || true
                nohup java -jar $(remotePath)/$(jarName) > app.log 2>&1 &
              displayName: 'Run Spring Boot App'
